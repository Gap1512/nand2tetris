@256
D=A
@SP
M=D
@FibonacciElement.Sys$init.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Sys.init
0;JMP
(FibonacciElement.Sys$init.0)
//function Main.fibonacci 0
(FibonacciElement.Main.fibonacci)
@SP
A=M
D=A
@SP
M=D
//pushargument0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushconstant2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//lt
@SP
M=M-1
A=M
D=M
A=A-1
D=M-D
@LESSER0
D;JLT
@NLESSER0
D;JGE
(LESSER0)
@SP
A=M-1
M=-1
@ENDLT0
0;JMP
(NLESSER0)
@SP
A=M-1
M=0
@ENDLT0
0;JMP
(ENDLT0)
//if-gotoIF_TRUE
@SP
M=M-1
D=M
A=D
D=M
@FibonacciElement.IF_TRUE
D;JNE
//gotoIF_FALSE
@FibonacciElement.IF_FALSE
0;JMP
//labelIF_TRUE
(FibonacciElement.IF_TRUE)
//pushargument0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//return
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//labelIF_FALSE
(FibonacciElement.IF_FALSE)
//pushargument0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushconstant2
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call Main.fibonacci 1  
@FibonacciElement.Main$fibonacci.0
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main$fibonacci.0)
//pushargument0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushconstant1
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
M=M-1
A=M
D=M
A=A-1
M=M-D
//call Main.fibonacci 1  
@FibonacciElement.Main$fibonacci.1
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main$fibonacci.1)
//add
@SP
M=M-1
A=M
D=M
A=A-1
M=D+M
//return
@LCL
D=M
@FRAME
M=D
@5
A=D-A
D=M
@RET
M=D
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@FRAME
D=M
@1
D=D-A
A=D
D=M
@THAT
M=D
@FRAME
D=M
@2
D=D-A
A=D
D=M
@THIS
M=D
@FRAME
D=M
@3
D=D-A
A=D
D=M
@ARG
M=D
@FRAME
D=M
@4
D=D-A
A=D
D=M
@LCL
M=D
@RET
A=M
0;JMP
//function Sys.init 0
(FibonacciElement.Sys.init)
@SP
A=M
D=A
@SP
M=D
//pushconstant4
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Main.fibonacci 1   
@FibonacciElement.Main$fibonacci.2
D=A
@SP
M=M+1
A=M-1
M=D
@LCL
D=M
@SP
M=M+1
A=M-1
M=D
@ARG
D=M
@SP
M=M+1
A=M-1
M=D
@THIS
D=M
@SP
M=M+1
A=M-1
M=D
@THAT
D=M
@SP
M=M+1
A=M-1
M=D
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@FibonacciElement.Main.fibonacci
0;JMP
(FibonacciElement.Main$fibonacci.2)
//labelWHILE
(FibonacciElement.WHILE)
//gotoWHILE
@FibonacciElement.WHILE
0;JMP
