//RAM16K.hdl
//Gustavo Alves Pacheco
//11821ECP011

// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[0..2], a = outa, b = outb, c = outc, d = outd, e = oute, f = outf, g = outg, h = outh);
    RAM4K(in = in, load = outa, address = address[2..13], out = ina);
    RAM4K(in = in, load = outb, address = address[2..13], out = inb);
    RAM4K(in = in, load = outc, address = address[2..13], out = inc);
    RAM4K(in = in, load = outd, address = address[2..13], out = ind);
    RAM4K(in = in, load = oute, address = address[2..13], out = ine);
    RAM4K(in = in, load = outf, address = address[2..13], out = inf);
    RAM4K(in = in, load = outg, address = address[2..13], out = ing);
    RAM4K(in = in, load = outh, address = address[2..13], out = inh);
    Mux8Way16(a = ina, b = inb, c = inc, d = ind, e = ine, f = inf, g = ing, h = inh, sel = address[0..2], out = out);
}
