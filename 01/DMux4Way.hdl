// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

 //Aluno: Gustavo Alves Pacheco
 //Matrícula: 11821ECP011
 //Disciplina: Elementos de Sistemas Computacionais

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    /**
    * Primeiramente é realizado a comparação no msb da chave seletora, pois
    * caso seja 1, a saida final deve ser c ou d. Caso seja 0, a saida final
    * deve ser a ou b.
    */
    DMux(in = in, sel = sel[1], a = aOrb, b = cOrd);
    /**
    * Em seguida é realizado a comparação no lsb da chave seletora, pois
    * caso seja 1, a saida final deve ser b ou d. Caso seja 0, a saida final
    * deve ser a ou c.
    */
    DMux(in = in, sel = sel[0], a = aOrc, b = bOrd);
    /**
    * Finalmente, a comparação entre os resultados das duas portas DMux
    * é feita utilizando portas 'And', visto que o output final deve ser aquele
    * referente à saida que se repetiu nos processos anteriores
    */
    And(a = aOrb, b = aOrc, out = a);
    And(a = aOrb, b = bOrd, out = b);
    And(a = cOrd, b = aOrc, out = c);
    And(a = cOrd, b = bOrd, out = d);
}
