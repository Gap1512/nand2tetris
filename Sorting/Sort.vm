function Sort.swap 3
push argument 2
push argument 0
add
pop pointer 1
push that 0
pop local 2
push argument 2
push argument 0
add
push argument 1
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 1
push argument 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Sort.quickSort 0
push argument 1
pop static 0
push argument 0
push constant 0
push static 0
push constant 1
sub
call Sort.quickSortAux 3
pop temp 0
push constant 0
return
function Sort.quickSortAux 3
push argument 0
push static 0
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
push argument 1
push argument 2
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
pop local 2
push argument 1
pop local 0
push argument 2
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 2
push argument 0
add
pop pointer 1
push that 0
lt
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 2
push argument 0
add
pop pointer 1
push that 0
eq
or
push local 0
push argument 2
lt
and
not
if-goto WHILE_END1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP1
label WHILE_END1
label WHILE_EXP2
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 2
push argument 0
add
pop pointer 1
push that 0
gt
not
if-goto WHILE_END2
push local 1
push constant 1
sub
pop local 1
goto WHILE_EXP2
label WHILE_END2
push local 0
push local 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push local 0
push local 1
call Sort.swap 3
pop temp 0
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
push argument 0
push local 2
push local 1
call Sort.swap 3
pop temp 0
push argument 0
push argument 1
push local 1
push constant 1
sub
call Sort.quickSortAux 3
pop temp 0
push argument 0
push local 1
push constant 1
add
push argument 2
call Sort.quickSortAux 3
pop temp 0
label IF_FALSE0
push constant 0
return
function Sort.bubbleSort 2
push argument 1
push constant 1
sub
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push constant 0
pop local 1
label WHILE_EXP1
push local 1
push local 0
lt
not
if-goto WHILE_END1
push argument 0
push argument 1
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 1
push constant 1
add
push argument 0
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 1
push local 1
push constant 1
add
call Sort.swap 3
pop temp 0
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.insertionSort 3
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 0
pop local 1
push local 0
push argument 0
add
pop pointer 1
push that 0
pop local 2
label WHILE_EXP1
push local 1
push constant 0
gt
push local 2
push local 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
lt
and
not
if-goto WHILE_END1
push local 1
push argument 0
add
push local 1
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
sub
pop local 1
push argument 0
push argument 1
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
goto WHILE_EXP1
label WHILE_END1
push local 1
push argument 0
add
push local 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.selectionSort 3
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 0
pop local 1
push local 0
pop local 2
label WHILE_EXP1
push local 1
push argument 1
lt
not
if-goto WHILE_END1
push local 1
push argument 0
add
pop pointer 1
push that 0
push local 2
push argument 0
add
pop pointer 1
push that 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
pop local 2
label IF_FALSE0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP1
label WHILE_END1
push argument 0
push local 0
push local 2
call Sort.swap 3
pop temp 0
push argument 0
push argument 1
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.isSorted 1
push argument 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
gt
not
if-goto WHILE_END0
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 0
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
function Sort.bogoSort 1
push argument 0
push argument 1
call Sort.isSorted 2
pop local 0
label WHILE_EXP0
push local 0
not
not
if-goto WHILE_END0
push argument 0
push argument 1
call Random.fisherYates 2
pop temp 0
push argument 0
push argument 1
call Sort.isSorted 2
pop local 0
push argument 0
push argument 1
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.gnomeSort 1
label WHILE_EXP0
push local 0
push argument 1
lt
not
if-goto WHILE_END0
push local 0
push constant 0
eq
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 0
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
gt
or
push local 0
push argument 0
add
pop pointer 1
push that 0
push local 0
push constant 1
sub
push argument 0
add
pop pointer 1
push that 0
eq
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 0
push local 0
push constant 1
sub
push local 0
call Sort.swap 3
pop temp 0
push local 0
push constant 1
sub
pop local 0
push argument 0
push argument 1
call Graphics.show 2
pop temp 0
push constant 35
call Sys.wait 1
pop temp 0
label IF_END0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
